{"version":3,"file":"js/676.d14799af.js","mappings":"wMAGO,MAAMA,GAAgBC,EAAAA,EAAAA,IAAY,QAAS,CAC9CC,MAAOA,KAAA,CACHC,KAAM,CACFC,SAAU,GACVC,SAAU,IAGdC,QAAS,GACTC,YAAY,EACZC,MAAO,KAEXC,QAAS,CACL,cAAMC,GACF,IAEI,MAAMC,QAAiBC,EAAAA,EAAMC,KAAK,oBAAqB,CACnDT,SAAUU,KAAKX,KAAKC,SACpBC,SAAUS,KAAKX,KAAKE,WAExB,MAA8B,gBAA1BM,EAASI,KAAKT,SACdQ,KAAKP,YAAa,EAClBO,KAAKR,QAAUK,EAASI,KAAKT,QAC7BQ,KAAKN,MAAQG,EAASI,KAAKP,MAE3BQ,aAAaC,QAAQ,QAASH,KAAKN,OAEnCQ,aAAaC,QAAQ,WAAYN,EAASI,KAAKX,UAC/CY,aAAaC,QAAQ,KAAMN,EAASI,KAAKG,KAClC,IAEPJ,KAAKP,YAAa,EAClBO,KAAKR,QAAUK,EAASI,KAAKT,SACtB,EAEf,CAAE,MAAOa,GAEL,OADAL,KAAKR,QAAU,YACR,CACX,CACJ,EACA,gBAAMc,GACF,IACI,MAAMT,QAAiBC,EAAAA,EAAMC,KAAK,sBAAuB,CACrDT,SAAUU,KAAKX,KAAKC,SACpBC,SAAUS,KAAKX,KAAKE,WAGxB,OADAS,KAAKR,QAAUK,EAASI,KAAKT,SACtB,CACX,CAAE,MAAOa,GAEL,OADAL,KAAKR,QAAU,gBACR,CACX,CACJ,K,mNCjBR,MAAMe,EAAarB,IACbsB,EAAQC,EACRC,GAAUC,EAAAA,EAAAA,IAAI,MAEdC,EAAiBC,UACnB,MAAMC,QAAkBP,EAAWX,WAC/BkB,IACAN,EAAM,iBACNO,OAAOC,SAASC,KAAO,QAC3B,EAGEC,EAAoBA,KACtBH,OAAOC,SAASC,KAAO,kBAAkB,EAGvCE,EAAaA,KACfJ,OAAOC,SAASC,KAAO,WAAW,E,iyEChDtC,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://client/./src/store/loginStore.js","webpack://client/./src/components/UserLogin.vue","webpack://client/./src/components/UserLogin.vue?d766"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport axios from 'axios';\r\n\r\nexport const useLoginStore = defineStore('login', {\r\n    state: () => ({\r\n        form: {\r\n            username: '',\r\n            password: '',\r\n\r\n        },\r\n        message: '',\r\n        loginError: false,\r\n        email: '',\r\n    }),\r\n    actions: {\r\n        async sqlLogin() {\r\n            try {\r\n\r\n                const response = await axios.post(`/api/api/sqlLogin`, {\r\n                    username: this.form.username,\r\n                    password: this.form.password\r\n                });\r\n                if (response.data.message === 'SQL 数据库登录成功') {\r\n                    this.loginError = false;\r\n                    this.message = response.data.message;\r\n                    this.email = response.data.email;\r\n                    \r\n                    localStorage.setItem('email', this.email);\r\n                    \r\n                    localStorage.setItem('username', response.data.username);\r\n                    localStorage.setItem('id', response.data.id);\r\n                    return true; // 表示登录成功\r\n                } else {\r\n                    this.loginError = true;\r\n                    this.message = response.data.message;\r\n                    return false;\r\n                }\r\n            } catch (error) {\r\n                this.message = 'SQL 登录失败';\r\n                return false;\r\n            }\r\n        },\r\n        async mongoLogin() {\r\n            try {\r\n                const response = await axios.post('/api/api/mongoLogin', {\r\n                    username: this.form.username,\r\n                    password: this.form.password\r\n                });\r\n                this.message = response.data.message;\r\n                return true;\r\n            } catch (error) {\r\n                this.message = 'MongoDB 登录失败';\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n});","<template>\r\n    <div class=\"login-container\">\r\n        <el-card class=\"login-card\">\r\n            <template #header>\r\n                <h2>登录</h2>\r\n            </template>\r\n            <el-form :model=\"loginStore.form\" ref=\"formRef\">\r\n                <el-form-item>\r\n                    <el-input v-model=\"loginStore.form.username\" placeholder=\"用户名\"\r\n                        :class=\"{ 'error-input': loginStore.loginError }\" />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-input v-model=\"loginStore.form.password\" placeholder=\"密码\" type=\"password\" />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"handleSqlLogin\">登录</el-button>\r\n                    <el-button @click=\"toRegister\">现在去注册</el-button>\r\n                    <el-button id=\"githubLoginBtn\" @click=\"handleGithubLogin\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\"\r\n                            style=\"width: 18px; height: 18px; margin-right: 4px;\">\r\n                            <path\r\n                                d=\"M24 0c-13.2 0-24 10.8-24 24s10.8 24 24 24 24-10.8 24-24-10.8-24-24-24zm0 44c-11 0-20-9-20-20 0-3.3.9-6.4 2.5-9.1-.2-.6-.2-1.2-.2-1.8 0-4.7 2.9-8.6 7-10.5-1.3.4-2.7.6-4.1.6-2.5 0-4.9-1-6.7-2.6 1.4.2 2.7.6 4 1-3.3-3.2-8-5.2-12.8-5.2-1.3 0-2.5.1-3.8.3 2.7 1.7 5.8 2.7 9 3.2-2.5-1.7-4-4.7-4-7.7 0-1.7.5-3.2 1.3-4.4-2.7.7-5.2-1.3-5.2-6 0-1.3.4-2.5 1-3.4 1.7 2.1 4.1 3.6 6.8 3.7-1.6 1.3-3.4 2-5.3 2.4.5-2.2 1.6-4.5 3-5.9-1.4.4-3.1.6-4.8.6-1.3 0-2.5-.1-3.8-.3 2.5 1.6 5.4 2.7 8.4 2.7 10 0 15.6-8.4 15.6-15.6 0-2.4-.1-4.7-.4-7 1.1.8 2.3 1.3 3.6 1.3 2.2 0 4.4-.6 6.2-1.6-1.1 2-3.4 3.4-6.1 4.3 1.9-.2 3.7-.8 5.2-1.6-1.3 2-2.9 3.9-4.8 5 1.6 1.3 3.5 2.1 5.5 2.1 12 0 18-10 18-18 0-3.5-.8-6.7-2.2-9.6 1.5-.3 2.9-.9 4.1-1.6-1.4 1.7-3.1 3-5 3.8 1.3-1.1 2.7-2.4 4-3.8-1 1.7-2.4 3.3-4 4.8 1.3-.1 2.6-.4 3.8-.8-1.1 1.7-2.8 3-4.7 3.8 1.1-.9 2-2 2.8-3.1-.9 1.2-2 2.2-3.2 3.1z\" />\r\n                        </svg>\r\n                        使用 GitHub 登录\r\n                    </el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n            <p>{{ loginStore.message }}</p>\r\n        </el-card>\r\n        <img src=\"/background.jpg\" alt=\"背景图\" class=\"bg-image\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineEmits, ref } from 'vue';\r\nimport { useLoginStore } from '../store/loginStore';\r\n\r\nconst loginStore = useLoginStore();\r\nconst emits = defineEmits(['login-success']);\r\nconst formRef = ref(null);\r\n\r\nconst handleSqlLogin = async () => {\r\n    const isSuccess = await loginStore.sqlLogin();\r\n    if (isSuccess) {\r\n        emits('login-success');\r\n        window.location.href = '/home';\r\n    }\r\n};\r\n\r\nconst handleGithubLogin = () => {\r\n    window.location.href = '/api/auth/github';\r\n};\r\n\r\nconst toRegister = () => {\r\n    window.location.href = '/register';\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n}\r\n\r\n.login-card {\r\n    width: 400px;\r\n    padding: 24px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.el-form-item {\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.login-container {\r\n    position: relative;\r\n    min-height: 100vh;\r\n}\r\n\r\n.bg-image {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    z-index: -1;\r\n    /* 置于底层 */\r\n}\r\n\r\n.login-card {\r\n    position: relative;\r\n    z-index: 1;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 2rem;\r\n    background: white;\r\n    /* 卡片背景色 */\r\n}\r\n</style>","import script from \"./UserLogin.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserLogin.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserLogin.vue?vue&type=style&index=0&id=46ccb386&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-46ccb386\"]])\n\nexport default __exports__"],"names":["useLoginStore","defineStore","state","form","username","password","message","loginError","email","actions","sqlLogin","response","axios","post","this","data","localStorage","setItem","id","error","mongoLogin","loginStore","emits","__emit","formRef","ref","handleSqlLogin","async","isSuccess","window","location","href","handleGithubLogin","toRegister","__exports__"],"sourceRoot":""}